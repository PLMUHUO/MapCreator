{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,OAAO,GAAG,OAAO,CAAC;AACxB,IAAM,QAAQ,GAAG,kBAAkB,CAAC;AACpC,IAAM,OAAO,GAAG,OAAO,CAAC;AACxB,IAAM,cAAc,GAAG,UAAU,CAAC;AAClC,IAAM,cAAc,GAAG,QAAQ,GAAG,OAAO,GAAG,cAAc,CAAC;;AAE3D,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC;;AAE5B,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,mBAAW,EAAE,EAAE,CAAC,KAAK;;AAErB,yBAAiB,EAAE,EAAE,CAAC,IAAI;;;AAG1B,oBAAY,EAAE,EAAE,CAAC,MAAM;;AAIvB,kBAAU,EAAE,EAAE,CAAC,IAAI;KACtB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,cAAM,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;;AAE1B,YAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;;AAEnE,UAAE,CAAC,GAAG,CAAC,yBAAyB,EAAE,cAAc,CAAC,CAAC;AAClD,YAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;AAClB,cAAE,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;AAC1C,yBAAa,GAAG;AACZ,uBAAO,EAAE,OAAO;AAChB,2BAAW,EAAE,EAAE;aAClB,CAAA;AACD,gBAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;AACD,YAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;KAClC;;AAED,SAAK,EAAE,iBAAY,EAElB;;AAED,WAAO,EAAE,mBAAY;;KAEpB;;AAED,YAAQ,EAAE,oBAAY;AAClB,YAAI,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,OAAO,KAAK,CAAC;AAC7D,YAAI,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;AAC3D,qBAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACjC,eAAO,IAAI,CAAC;KACf;;AAED,YAAQ,EAAE,oBAAY;AAClB,YAAI,CAAC,aAAa,EAAE,OAAO,KAAK,CAAC;AACjC,YAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AAC1C,eAAO,GAAG,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;KACjE;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const version = '0.0.1';\r\nconst dataRoot = 'g:\\\\game\\\\data\\\\';\r\nconst resPath = 'map\\\\';\r\nconst recordFileName = 'map.json';\r\nconst recordFilePath = dataRoot + resPath + recordFileName;\r\n\r\nwindow.gRecordObject = null;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        statusLabel: cc.Label,\r\n        \r\n        fileListContainer: cc.Node,\r\n        \r\n        // dialog prefab\r\n        NewMapDialog: cc.Prefab,\r\n        \r\n        \r\n        \r\n        assetsView: cc.Node,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        window.canvas = this.node;\r\n        \r\n        this._assetsViewCtrl = this.assetsView.getComponent('assets_view');\r\n        \r\n        cc.log('start load record file:', recordFilePath);\r\n        if (!this.loadData()) {\r\n            cc.log('record file not exist, created.');\r\n            gRecordObject = {\r\n                version: version,\r\n                fileRecords: [],\r\n            }\r\n            this.saveData();\r\n        }\r\n        this._assetsViewCtrl.refresh();\r\n    },\r\n    \r\n    start: function () {\r\n        \r\n    },\r\n    \r\n    onCLick: function () {\r\n        //openDialog('new_map_dialog');\r\n    },\r\n    \r\n    loadData: function () {\r\n        if (!jsb.fileUtils.isFileExist(recordFilePath)) return false;\r\n        var data = jsb.fileUtils.getStringFromFile(recordFilePath);\r\n        gRecordObject = JSON.parse(data);\r\n        return true;\r\n    },\r\n    \r\n    saveData: function () {\r\n        if (!gRecordObject) return false;\r\n        var cache = JSON.stringify(gRecordObject);\r\n        return jsb.fileUtils.writeStringToFile(cache, recordFilePath);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}